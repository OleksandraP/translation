<?xml version="1.0"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file original="bem-method/method/solved-problems/solved-problems.ru.md" source-language="ru" target-language="uk" datatype="markdown">
    <header>
      <skl>
        <external-file href="translation/methodology/solved-problems/solved-problems.ru.skl"/>
      </skl>
    </header>
    <body>
<trans-unit id="1">
  <source xml:lang="ru">Решение распространенных проблем веб-разработки с помощью БЭМ</source>
  <target xml:lang="uk">Рішення типових проблем веб-розробки з допомогою БЕМ</target>
</trans-unit>
<trans-unit id="2">
  <source xml:lang="ru">Методология БЭМ задает <bpt id="l2">[</bpt>правила по именованию CSS-селекторов<ept id="l2">]</ept><bpt id="l3">(</bpt>../naming-convention/naming-convention.ru.md<ept id="l3">)</ept>, соблюдение которых решает ряд проблем веб-разработки и отвечает на следующие вопросы:</source>
  <target xml:lang="uk">Методологія БЕМ задає [правила іменування CSS селекторів](../naming-convention/naming-convention.ru.md), дотримання яких вирішує ряд проблем веб-розробки і відповідає на наступні питання:</target>
</trans-unit>
<trans-unit id="3">
  <source xml:lang="ru"><bpt id="l1">[</bpt>Как упростить код и облегчить рефакторинг<ept id="l1">]</ept><bpt id="l2">(</bpt>#Как-упростить-код-и-облегчить-рефакторинг<ept id="l2">)</ept></source>
  <target xml:lang="uk">[Як спростити код і полегшити рефакторинг](#Як-спростити-код-і-полегшити-рефакторинг)</target>
</trans-unit>
<trans-unit id="4">
  <source xml:lang="ru"><bpt id="l1">[</bpt>Как получить самодокументируемый код<ept id="l1">]</ept><bpt id="l2">(</bpt>#Как-получить-самодокументируемый-код<ept id="l2">)</ept></source>
  <target xml:lang="uk">[Як отримати самодокументируемый код](#Як-отримати-самодокументируемый-код)</target>
</trans-unit>
<trans-unit id="5">
  <source xml:lang="ru"><bpt id="l1">[</bpt>Как начать повторно использовать код и избежать взаимного влияния компонентов друг на друга<ept id="l1">]</ept><bpt id="l2">(</bpt>#Как-начать-повторно-использовать-код-и-избежать-взаимного-влияния-компонентов-друг-на-друга<ept id="l2">)</ept></source>
  <target xml:lang="uk">[Як почати повторно використовувати код і уникнути взаємного впливу компонентів один на одного](#Як-почати-повторно-використовувати-код-і-уникнути взаємного впливу-компонентів-один-на-одного)</target>
</trans-unit>
<trans-unit id="6">
  <source xml:lang="ru"><bpt id="l1">[</bpt>Как разместить несколько сущностей на одном DOM-узле и избежать «Copy-Paste»<ept id="l1">]</ept><bpt id="l2">(</bpt>#Как-разместить-несколько-сущностей-на-одном-dom-узле-и-избежать-copy-paste<ept id="l2">)</ept></source>
  <target xml:lang="uk">[Як розмістити кілька сутностей на одному DOM-вузлі і уникнути «Copy-Paste»](#Як-the-кілька-сутностей-на-одному-dom-сайті-і-уникнути-copy-paste)</target>
</trans-unit>
<trans-unit id="7">
  <source xml:lang="ru">Как упростить код и облегчить рефакторинг</source>
  <target xml:lang="uk">Як спростити код і полегшити рефакторинг</target>
</trans-unit>
<trans-unit id="8">
  <source xml:lang="ru"><bpt id="1">**</bpt>Проблема<ept id="1">**</ept></source>
  <target xml:lang="uk">**Проблема**</target>
</trans-unit>
<trans-unit id="9">
  <source xml:lang="ru">При верстке проекта компоненты интерфейса получают имена на основе контекста, с которым работает разработчик.</source>
  <target xml:lang="uk">При верстці проекту компоненти інтерфейсу отримують імена на основі контексту, з яким працює розробник.</target>
</trans-unit>
<trans-unit id="10">
  <source xml:lang="ru">Обычно контекстом служит страница или какая-то ее часть.</source>
  <target xml:lang="uk">Зазвичай контекстом служить сторінка або якась її частина.</target>
</trans-unit>
<trans-unit id="11">
  <source xml:lang="ru">Когда страницу верстает один разработчик в короткие сроки, коллизии имен можно избежать.</source>
  <target xml:lang="uk">Коли сторінку верстає один розробник в короткі терміни, колізії імен можна уникнути.</target>
</trans-unit>
<trans-unit id="12">
  <source xml:lang="ru">Но если над проектом работают несколько человек или правки нужно внести спустя какое-то время, то отследить зависимые имена компонентов становится сложно.</source>
  <target xml:lang="uk">Але якщо над проектом працюють кілька осіб або правки потрібно внести через якийсь час, то відстежити залежні імена компонентів стає складно.</target>
</trans-unit>
<trans-unit id="13">
  <source xml:lang="ru">В больших проектах результатом правки одного класса может стать десяток «разъехавшихся» страниц.</source>
  <target xml:lang="uk">У великих проектах результатом правки одного класу може стати десяток «роз'їхалися» сторінок.</target>
</trans-unit>
<trans-unit id="14">
  <source xml:lang="ru">Например, для создания навигационного меню могут использоваться следующие имена классов:</source>
  <target xml:lang="uk">Наприклад, для створення навігаційного меню можуть використовуватися такі імена класів:</target>
</trans-unit>
<trans-unit id="15">
  <source xml:lang="ru">&lt;ul class="nav"&gt;
    &lt;li class="item active"&gt;&lt;a class="link"&gt;One&lt;/a&gt;&lt;/li&gt;
    &lt;li class="item"&gt;&lt;a class="link"&gt;Two&lt;/a&gt;&lt;/li&gt;
    &lt;li class="item"&gt;&lt;a class="link"&gt;Three&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</source>
  <target xml:lang="uk">&lt;ul class="nav"&gt;
    &lt;li class="item active"&gt;&lt;a class="link"&gt;One&lt;/a&gt;&lt;/li&gt;
    &lt;li class="item"&gt;&lt;a class="link"&gt;Two&lt;/a&gt;&lt;/li&gt;
    &lt;li class="item"&gt;&lt;a class="link"&gt;Three&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</target>
</trans-unit>
<trans-unit id="16">
  <source xml:lang="ru">К ним могут быть написаны CSS-правила:</source>
  <target xml:lang="uk">До них можуть бути написані CSS-правил:</target>
</trans-unit>
<trans-unit id="17">
  <source xml:lang="ru">Если понадобится добавить на страницу другой компонент, содержащий пункты, то стили для нового <bpt id="2">`</bpt>item<ept id="2">`</ept> повлияют на пункты из существующего навигационного меню.</source>
  <target xml:lang="uk">Якщо знадобиться додати на сторінку інший компонент, що містить пункти, стилі для нового `item` вплинуть на пункти з існуючого навігаційного меню.</target>
</trans-unit>
<trans-unit id="18">
  <source xml:lang="ru">Или предположим, что в навигационном меню нужно изменить правила класса <bpt id="2">`</bpt>.active<ept id="2">`</ept>.</source>
  <target xml:lang="uk">Або припустимо, що в навігаційному меню потрібно змінити правила класу `.active`.</target>
</trans-unit>
<trans-unit id="19">
  <source xml:lang="ru">По имени непонятно, какие компоненты его используют.</source>
  <target xml:lang="uk">По імені незрозуміло компоненти, які його використовують.</target>
</trans-unit>
<trans-unit id="20">
  <source xml:lang="ru">Может оказаться, что на другой странице существует, например, кнопка <bpt id="2">`</bpt>&lt;div class="button active"&gt;Нажми меня!&lt;/div&gt;<ept id="2">`</ept>.</source>
  <target xml:lang="uk">Може виявитися, що на іншій сторінці існує, наприклад, кнопка `&lt;div class="button active"&gt;Натисни мене!&lt;/div&gt;`.</target>
</trans-unit>
<trans-unit id="21">
  <source xml:lang="ru">Тогда изменение правил для <bpt id="2">`</bpt>.active<ept id="2">`</ept> повлияет на стили этой кнопки.</source>
  <target xml:lang="uk">Тоді зміна правил для `.active` вплине на стилі цієї кнопки.</target>
</trans-unit>
<trans-unit id="22">
  <source xml:lang="ru">Чтобы разобраться, можно ли безболезненно изменить стили для класса <bpt id="2">`</bpt>.active<ept id="2">`</ept>, разработчику придется просмотреть всю структуру страницы или проекта.</source>
  <target xml:lang="uk">Щоб розібратися, чи можна безболісно змінити стилі для класу `.active`, розробнику доведеться переглянути всю структуру сторінки або проекту.</target>
</trans-unit>
<trans-unit id="23">
  <source xml:lang="ru">Любое изменение потребует значительных временных затрат только на поиск зависимых компонентов.</source>
  <target xml:lang="uk">Будь-яка зміна потребуватиме значних часових витрат тільки на пошук залежних компонентів.</target>
</trans-unit>
<trans-unit id="24">
  <source xml:lang="ru"><bpt id="1">**</bpt>Решение<ept id="1">**</ept></source>
  <target xml:lang="uk">**Рішення**</target>
</trans-unit>
<trans-unit id="25">
  <source xml:lang="ru">Методология БЭМ решает проблему коллизии имен при помощи <bpt id="l2">[</bpt>соглашения по именованию CSS-классов<ept id="l2">]</ept><bpt id="l3">(</bpt>../naming-convention/naming-convention.ru.md#Соглашение-по-именованию-css-селекторов<ept id="l3">)</ept>, предоставляя всем компонентам и их составляющим уникальные имена.</source>
  <target xml:lang="uk">Методологія БЕМ вирішує проблему колізії імен за допомогою [угоди щодо іменування CSS-класів](../naming-convention/naming-convention.ru.md#Угода-по-іменування-css селекторів), надаючи всім компонентів та їх складових унікальні імена.</target>
</trans-unit>
<trans-unit id="26">
  <source xml:lang="ru">Применение правил по именованию позволяет:</source>
  <target xml:lang="uk">Застосування правил іменування дозволяє:</target>
</trans-unit>
<trans-unit id="27">
  <source xml:lang="ru">задавать уникальные имена <bpt id="l2">[</bpt>БЭМ-сущностям<ept id="l2">]</ept><bpt id="l3">(</bpt>../key-concepts/key-concepts.ru.md#БЭМ-сущность<ept id="l3">)</ept>;</source>
  <target xml:lang="uk">задавати унікальні імена [БЕМ-сутностей](../key-concepts/key-concepts.ru.md#БЕМ-сутність);</target>
</trans-unit>
<trans-unit id="28">
  <source xml:lang="ru">отслеживать иерархические связи в пределах блока;</source>
  <target xml:lang="uk">відстежувати ієрархічні зв'язки в межах блоку;</target>
</trans-unit>
<trans-unit id="29">
  <source xml:lang="ru">упрощать восприятие кода;</source>
  <target xml:lang="uk">спрощувати сприйняття коду;</target>
</trans-unit>
<trans-unit id="30">
  <source xml:lang="ru">получать <bpt id="l2">[</bpt>самодокументируемый код<ept id="l2">]</ept><bpt id="l3">(</bpt>#Как-получить-самодокументируемый-код<ept id="l3">)</ept>.</source>
  <target xml:lang="uk">отримувати [самодокументируемый код](#Як-отримати-самодокументируемый-код).</target>
</trans-unit>
<trans-unit id="31">
  <source xml:lang="ru">Рассмотрим тот же пример навигационного меню:</source>
  <target xml:lang="uk">Розглянемо той же приклад навігаційного меню:</target>
</trans-unit>
<trans-unit id="32">
  <source xml:lang="ru">&lt;ul class="nav"&gt;
    &lt;li class="item active"&gt;&lt;a class="link"&gt;One&lt;/a&gt;&lt;/li&gt;
    &lt;li class="item"&gt;&lt;a class="link"&gt;Two&lt;/a&gt;&lt;/li&gt;
    &lt;li class="item"&gt;&lt;a class="link"&gt;Three&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</source>
  <target xml:lang="uk">&lt;ul class="nav"&gt;
    &lt;li class="item active"&gt;&lt;a class="link"&gt;One&lt;/a&gt;&lt;/li&gt;
    &lt;li class="item"&gt;&lt;a class="link"&gt;Two&lt;/a&gt;&lt;/li&gt;
    &lt;li class="item"&gt;&lt;a class="link"&gt;Three&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</target>
</trans-unit>
<trans-unit id="33">
  <source xml:lang="ru">Но применим к нему правила именования БЭМ: класс <bpt id="2">`</bpt>nav<ept id="2">`</ept> будет обозначать имя блока, <bpt id="4">`</bpt>nav__item<ept id="4">`</ept> и <bpt id="6">`</bpt>nav__link<ept id="6">`</ept> — имена элементов, а <bpt id="8">`</bpt>nav__item_active<ept id="8">`</ept> — имя модификатора элемента <bpt id="10">`</bpt>item<ept id="10">`</ept>.</source>
  <target xml:lang="uk">Але застосуємо до нього правила іменування БЕМ: клас `nav` буде позначати ім'я блоку, `nav__item` і `nav__link` — імена елементів, а `nav__item_active` — ім'я модифікатора елемента `item`.</target>
</trans-unit>
<trans-unit id="34">
  <source xml:lang="ru">В таком случае запись будет следующей:</source>
  <target xml:lang="uk">У такому випадку запис буде наступною:</target>
</trans-unit>
<trans-unit id="35">
  <source xml:lang="ru">&lt;ul class="nav"&gt;
    &lt;li class="nav__item nav__item_active"&gt;&lt;a class="nav__link"&gt;One&lt;/a&gt;&lt;/li&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;Two&lt;/a&gt;&lt;/li&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;Three&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</source>
  <target xml:lang="uk">&lt;ul class="nav"&gt;
    &lt;li class="nav__item nav__item_active"&gt;&lt;a class="nav__link"&gt;One&lt;/a&gt;&lt;/li&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;Two&lt;/a&gt;&lt;/li&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;Three&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</target>
</trans-unit>
<trans-unit id="36">
  <source xml:lang="ru">И, соответственно, CSS будет иметь такой вид:</source>
  <target xml:lang="uk">І, відповідно, CSS буде мати такий вигляд:</target>
</trans-unit>
<trans-unit id="37">
  <source xml:lang="ru">Новые имена CSS-классов содержат всю информацию о структуре блока.</source>
  <target xml:lang="uk">Нові імена CSS-класів містять всю інформацію про структуру блоку.</target>
</trans-unit>
<trans-unit id="38">
  <source xml:lang="ru">А это значит, что больше не нужно просматривать HTML-код страницы, чтобы определить все зависимости.</source>
  <target xml:lang="uk">А це значить, що більше не потрібно переглядати HTML-код сторінки, щоб визначити всі залежності.</target>
</trans-unit>
<trans-unit id="39">
  <source xml:lang="ru">Cелектор всегда содержит знания о том, на какой блок или элемент влияют его правила (в данном случае на элемент <bpt id="2">`</bpt>nav__item<ept id="2">`</ept>).</source>
  <target xml:lang="uk">Селектор завжди містить знання про те, на який блок або елемент впливають його правила (в даному випадку на елемент `nav__item`).</target>
</trans-unit>
<trans-unit id="40">
  <source xml:lang="ru">Разработчику не придется думать о возможном существовании кнопки <bpt id="2">`</bpt>&lt;div class="button active"&gt;Нажми меня!&lt;/div&gt;<ept id="2">`</ept>, так как еe CSS-правила будут записаны как <bpt id="4">`</bpt>.button_active<ept id="4">`</ept> и не будут зависеть от правил модификатора <bpt id="6">`</bpt>active<ept id="6">`</ept> для пункта меню (<bpt id="8">`</bpt>nav__item_active<ept id="8">`</ept>).</source>
  <target xml:lang="uk">Розробникам не доведеться думати про можливе існування кнопки `&lt;div class="button active"&gt;Натисни мене!&lt;/div&gt;`, так як її CSS-правила будуть записані як `.button_active` і не будуть залежати від правил модифікатора `active` для пункту меню (`nav__item_active`).</target>
</trans-unit>
<trans-unit id="41">
  <source xml:lang="ru">Использование длинных имен имеет следующие недостатки:</source>
  <target xml:lang="uk">Використання довгих імен має наступні недоліки:</target>
</trans-unit>
<trans-unit id="42">
  <source xml:lang="ru">Результирующий код весит больше.</source>
  <target xml:lang="uk">Результуючий код важить більше.</target>
</trans-unit>
<trans-unit id="43">
  <source xml:lang="ru">Эта проблема решается <bpt id="2">`</bpt>gzip<ept id="2">`</ept>, который сжимает повторяющиеся последовательности в именах.</source>
  <target xml:lang="uk">Ця проблема вирішується `gzip`, який стискає повторювані послідовності в іменах.</target>
</trans-unit>
<trans-unit id="44">
  <source xml:lang="ru">Времени на написание классов тратится больше.</source>
  <target xml:lang="uk">Часу на написання класів витрачається більше.</target>
</trans-unit>
<trans-unit id="45">
  <source xml:lang="ru">Эту проблему помогают решить автозаполнение в редакторе, использование CSS-препроцессоров и шаблонизаторов, которые автоматически добавляют префиксы.</source>
  <target xml:lang="uk">Цю проблему допомагають вирішити автозаповнення в редакторі, використання CSS препроцесорів і шаблонизаторов, які автоматично додають префікси.</target>
</trans-unit>
<trans-unit id="46">
  <source xml:lang="ru">Длинные имена классов предоставляют явные связи между составными частями компонентов, что экономит время на изучение архитектуры проекта.</source>
  <target xml:lang="uk">Довгі імена класів надають явні зв'язки між складовими частинами компонентів, що економить час на вивчення архітектури проекту.</target>
</trans-unit>
<trans-unit id="47">
  <source xml:lang="ru">Как получить самодокументируемый код</source>
  <target xml:lang="uk">Як отримати самодокументируемый код</target>
</trans-unit>
<trans-unit id="48">
  <source xml:lang="ru"><bpt id="1">**</bpt>Проблема<ept id="1">**</ept></source>
  <target xml:lang="uk">**Проблема**</target>
</trans-unit>
<trans-unit id="49">
  <source xml:lang="ru">При переходе на новый проект разработчик тратит много усилий на то, чтобы понять, как все устроено, где что лежит и как работает код.</source>
  <target xml:lang="uk">При переході на новий проект розробник витрачає багато зусиль на те, щоб зрозуміти, як все влаштовано, де що лежить і як працює код.</target>
</trans-unit>
<trans-unit id="50">
  <source xml:lang="ru">Порой именно на такое изучение уходит большая часть времени, а вовсе не на реализацию функциональности или исправление ошибки.</source>
  <target xml:lang="uk">Часом саме на таке вивчення йде велика частина часу, а зовсім не на реалізацію функціональності або виправлення помилки.</target>
</trans-unit>
<trans-unit id="51">
  <source xml:lang="ru"><bpt id="1">**</bpt>Решение<ept id="1">**</ept></source>
  <target xml:lang="uk">**Рішення**</target>
</trans-unit>
<trans-unit id="52">
  <source xml:lang="ru">Одна из целей БЭМ — дать понять, что делает тот или иной код, только по названиям классов.</source>
  <target xml:lang="uk">Одна з цілей БЕМ — дати зрозуміти, що робить той чи інший код, тільки за назвами класів.</target>
</trans-unit>
<trans-unit id="53">
  <source xml:lang="ru">Идея самодокументируемого кода заключается в том, чтобы при просмотре CSS-классов, переменных и функций было понятно, как работает код, и как взаимодействуют компоненты интерфейса.</source>
  <target xml:lang="uk">Ідея самодокументируемого коду полягає в тому, щоб при перегляді CSS-класів, змінних і функцій було зрозуміло, як працює код, і як взаємодіють компоненти інтерфейсу.</target>
</trans-unit>
<trans-unit id="54">
  <source xml:lang="ru">Используя БЭМ, можно получить HTML с именами классов, показывающих взаимодействие следующих частей кода:</source>
  <target xml:lang="uk">Використовуючи БЕМ, можна отримати HTML з іменами класів, показують взаємодію таких частин коду:</target>
</trans-unit>
<trans-unit id="55">
  <source xml:lang="ru">независимых <bpt id="l2">[</bpt>блоков<ept id="l2">]</ept><bpt id="l3">(</bpt>../key-concepts/key-concepts.ru.md#Блок<ept id="l3">)</ept>;</source>
  <target xml:lang="uk">незалежних [блоків](../key-concepts/key-concepts.ru.md#Блок);</target>
</trans-unit>
<trans-unit id="56">
  <source xml:lang="ru"><bpt id="l1">[</bpt>элементов<ept id="l1">]</ept><bpt id="l2">(</bpt>../key-concepts/key-concepts.ru.md#Элемент<ept id="l2">)</ept> (дочерних компонентов) этого блока;</source>
  <target xml:lang="uk">[елементів](../key-concepts/key-concepts.ru.md#Елемент) (дочірніх компонентів) цього блоку;</target>
</trans-unit>
<trans-unit id="57">
  <source xml:lang="ru"><bpt id="l1">[</bpt>модификаторов<ept id="l1">]</ept><bpt id="l2">(</bpt>../key-concepts/key-concepts.ru.md#Модификатор<ept id="l2">)</ept> блока или элемента.</source>
  <target xml:lang="uk">[модифікаторів](../key-concepts/key-concepts.ru.md#Модифікатор) блоку або елемента.</target>
</trans-unit>
<trans-unit id="58">
  <source xml:lang="ru">Рассмотрим пример с формой поиска на сайте.</source>
  <target xml:lang="uk">Розглянемо приклад з формою пошуку на сайті.</target>
</trans-unit>
<trans-unit id="59">
  <source xml:lang="ru">Не будем обращаться к HTML, попытаемся прочитать только CSS и понять, какую часть интерфейса он описывает.</source>
  <target xml:lang="uk">Не будемо звертатися до HTML, спробуємо прочитати тільки CSS і зрозуміти, яку частину інтерфейсу він описує.</target>
</trans-unit>
<trans-unit id="60">
  <source xml:lang="ru">Вариант реализации формы в классической верстке:</source>
  <target xml:lang="uk">Варіант реалізації форми в класичній верстання:</target>
</trans-unit>
<trans-unit id="61">
  <source xml:lang="ru">Такой способ записи не отражает связи между:</source>
  <target xml:lang="uk">Такий спосіб запису не відображає зв'язок між:</target>
</trans-unit>
<trans-unit id="62">
  <source xml:lang="ru">компонентами и их составными частями;</source>
  <target xml:lang="uk">компонентами та їх складовими частинами;</target>
</trans-unit>
<trans-unit id="63">
  <source xml:lang="ru">селекторами и конкретными компонентами интерфейса, к которым они относятся.</source>
  <target xml:lang="uk">селекторами і конкретними компонентами інтерфейсу, до яких вони відносяться.</target>
</trans-unit>
<trans-unit id="64">
  <source xml:lang="ru">Использование глобальных селекторов делает код проекта нерасширяемым, так как внесение минимальных изменений повлечет за собой правки во всех зависимых правилах.</source>
  <target xml:lang="uk">Використання глобальних селекторів робить код проекту нерасширяемым, так як внесення мінімальних змін спричинить за собою виправлення у всіх залежних правилах.</target>
</trans-unit>
<trans-unit id="65">
  <source xml:lang="ru">Напишем CSS на классы:</source>
  <target xml:lang="uk">Напишемо CSS на класи:</target>
</trans-unit>
<trans-unit id="66">
  <source xml:lang="ru">Код стал информативнее: теперь понятно, что есть форма, поле и какой-то компонент <bpt id="2">`</bpt>submit<ept id="2">`</ept>.</source>
  <target xml:lang="uk">Код став інформації: тепер зрозуміло, що є форма, поле і якийсь компонент `submit`.</target>
</trans-unit>
<trans-unit id="67">
  <source xml:lang="ru">Но такие имена все еще не дают понять, относится ли поле (<bpt id="2">`</bpt>field<ept id="2">`</ept>) к форме (<bpt id="4">`</bpt>form<ept id="4">`</ept>), или что произойдет, если полей или форм на странице будет несколько.</source>
  <target xml:lang="uk">Але такі імена все ще не дають зрозуміти, чи відноситься поле (`field`) до формі (`form`), або що станеться, якщо полів або форм на сторінці буде кілька.</target>
</trans-unit>
<trans-unit id="68">
  <source xml:lang="ru">Снова возникает необходимость обращаться к HTML.</source>
  <target xml:lang="uk">Знову виникає необхідність звертатися до HTML.</target>
</trans-unit>
<trans-unit id="69">
  <source xml:lang="ru">Перепишем пример, используя <bpt id="l2">[</bpt>соглашение по именованию БЭМ<ept id="l2">]</ept><bpt id="l3">(</bpt>../naming-convention/naming-convention.ru.md<ept id="l3">)</ept>:</source>
  <target xml:lang="uk">Перепишемо приклад, використовуючи [угода щодо іменування БЕМ](../naming-convention/naming-convention.ru.md):</target>
</trans-unit>
<trans-unit id="70">
  <source xml:lang="ru">Такая запись дает понять, как работает данный код.</source>
  <target xml:lang="uk">Такий запис дає зрозуміти, як працює даний код.</target>
</trans-unit>
<trans-unit id="71">
  <source xml:lang="ru">Имена CSS-классов показывают, что:</source>
  <target xml:lang="uk">Імена CSS-класів показують, що:</target>
</trans-unit>
<trans-unit id="72">
  <source xml:lang="ru">Существует форма, реализованная блоком <bpt id="2">`</bpt>form<ept id="2">`</ept>.</source>
  <target xml:lang="uk">Існує форма, реалізована блоком `form`.</target>
</trans-unit>
<trans-unit id="73">
  <source xml:lang="ru">Модификатор <bpt id="2">`</bpt>form_search<ept id="2">`</ept> указывает на то, что речь идет о форме поиска.</source>
  <target xml:lang="uk">Модифікатор `form_search` вказує на те, що мова йде про форму пошуку.</target>
</trans-unit>
<trans-unit id="74">
  <source xml:lang="ru">У формы есть составляющие — вложенные элементы: поле <bpt id="2">`</bpt>form__field<ept id="2">`</ept> и кнопка <bpt id="4">`</bpt>form__submit-button<ept id="4">`</ept>.</source>
  <target xml:lang="uk">У форми є складові — вкладені елементи: поле `form__field` кнопка `form__submit-button`.</target>
</trans-unit>
<trans-unit id="75">
  <source xml:lang="ru">Следование соглашению по именованию БЭМ позволяет понять структуру блока без подробного изучения HTML.</source>
  <target xml:lang="uk">Дотримання угоди щодо іменування БЕМ дозволяє зрозуміти структуру блоку без докладного вивчення HTML.</target>
</trans-unit>
<trans-unit id="76">
  <source xml:lang="ru">Даже при появлении на странице еще одного поля (кроме <bpt id="2">`</bpt>form__field<ept id="2">`</ept>), его правила никак не будут влиять на элементы поисковой формы.</source>
  <target xml:lang="uk">Навіть при появі на сторінці ще одного поля (крім `form__field`), його правила ніяк не будуть впливати на елементи пошукової форми.</target>
</trans-unit>
<trans-unit id="77">
  <source xml:lang="ru">Новое поле будет реализовано как элемент другого блока и будет иметь свое уникальное имя.</source>
  <target xml:lang="uk">Нове поле буде реалізовано як елемент іншого блоку і буде мати своє унікальне ім'я.</target>
</trans-unit>
<trans-unit id="78">
  <source xml:lang="ru">Например, <bpt id="2">`</bpt>attach__field<ept id="2">`</ept>.</source>
  <target xml:lang="uk">Наприклад, `attach__field`.</target>
</trans-unit>
<trans-unit id="79">
  <source xml:lang="ru">Правила именования БЭМ позволяют сделать код проекта однозначным и, как следствие, информативным.</source>
  <target xml:lang="uk">Правила іменування БЕМ дозволяють зробити код проекту однозначним і, як наслідок, інформативним.</target>
</trans-unit>
<trans-unit id="80">
  <source xml:lang="ru">Это снижает порог входа для других разработчиков.</source>
  <target xml:lang="uk">Це знижує поріг входу для інших розробників.</target>
</trans-unit>
<trans-unit id="81">
  <source xml:lang="ru">Как начать повторно использовать код и избежать взаимного влияния компонентов друг на друга</source>
  <target xml:lang="uk">Як почати повторно використовувати код і уникнути взаємного впливу компонентів один на одного</target>
</trans-unit>
<trans-unit id="82">
  <source xml:lang="ru"><bpt id="1">**</bpt>Проблема<ept id="1">**</ept></source>
  <target xml:lang="uk">**Проблема**</target>
</trans-unit>
<trans-unit id="83">
  <source xml:lang="ru">Разработчик использует схожий набор компонентов при разработке страниц одного проекта.</source>
  <target xml:lang="uk">Розробник використовує схожий набір компонентів при розробці сторінок одного проекту.</target>
</trans-unit>
<trans-unit id="84">
  <source xml:lang="ru">Например, на странице может быть несколько типов блока <bpt id="2">`</bpt>menu<ept id="2">`</ept>.</source>
  <target xml:lang="uk">Наприклад, на сторінці може бути кілька типів блоку `menu`.</target>
</trans-unit>
<trans-unit id="85">
  <source xml:lang="ru">Рассмотрим проблему на примере навигационного меню:</source>
  <target xml:lang="uk">Розглянемо проблему на прикладі навігаційного меню:</target>
</trans-unit>
<trans-unit id="86">
  <source xml:lang="ru">&lt;ul class="nav"&gt;
    &lt;li class="item"&gt;&lt;a class="link"&gt;One&lt;/a&gt;&lt;/li&gt;
    &lt;li class="item"&gt;&lt;a class="link"&gt;Two&lt;/a&gt;&lt;/li&gt;
    &lt;li class="item"&gt;&lt;a class="link"&gt;Three&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</source>
  <target xml:lang="uk">&lt;ul class="nav"&gt;
    &lt;li class="item"&gt;&lt;a class="link"&gt;One&lt;/a&gt;&lt;/li&gt;
    &lt;li class="item"&gt;&lt;a class="link"&gt;Two&lt;/a&gt;&lt;/li&gt;
    &lt;li class="item"&gt;&lt;a class="link"&gt;Three&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</target>
</trans-unit>
<trans-unit id="87">
  <source xml:lang="ru">CSS-стили к пункту <bpt id="2">`</bpt>item<ept id="2">`</ept> могут быть записаны как:</source>
  <target xml:lang="uk">CSS-стилі до пункту `item` можуть бути записані як:</target>
</trans-unit>
<trans-unit id="88">
  <source xml:lang="ru">Если на страницу понадобится добавить дополнительные компоненты, содержащие пункты, то появится еще один блок кода с классом <bpt id="2">`</bpt>item<ept id="2">`</ept>, например:</source>
  <target xml:lang="uk">Якщо на сторінку знадобиться додати додаткові компоненти, що містять пункти, то з'явиться ще один блок коду з класом `item`, наприклад:</target>
</trans-unit>
<trans-unit id="89">
  <source xml:lang="ru">&lt;div class="snippets"&gt;
    &lt;div class="item"&gt;
        &lt;h2 class="title"&gt;&lt;/h2&gt;
        &lt;img class="thumb"&gt;
    &lt;/div&gt;
&lt;/div&gt;</source>
  <target xml:lang="uk">&lt;div class="snippets"&gt;
    &lt;div class="item"&gt;
        &lt;h2 class="title"&gt;&lt;/h2&gt;
        &lt;img class="thumb"&gt;
    &lt;/div&gt;
&lt;/div&gt;</target>
</trans-unit>
<trans-unit id="90">
  <source xml:lang="ru">В этом случае CSS может быть оформлен с помощью каскадов.</source>
  <target xml:lang="uk">У цьому випадку CSS може бути оформлений за допомогою каскадів.</target>
</trans-unit>
<trans-unit id="91">
  <source xml:lang="ru">Для этого достаточно доопределить правила, уже написанные для <bpt id="2">`</bpt>.item<ept id="2">`</ept>:</source>
  <target xml:lang="uk">Для цього достатньо довизначити правила, вже написані для `.item`:</target>
</trans-unit>
<trans-unit id="92">
  <source xml:lang="ru">Подобный код может работать до тех пор, пока не возникнет необходимость изменить страницу.</source>
  <target xml:lang="uk">Такий код може працювати до тих пір, поки не виникне необхідність змінити сторінку.</target>
</trans-unit>
<trans-unit id="93">
  <source xml:lang="ru">Например, переместить пункты меню, использовать написанный код в другом месте отдельно от родительского компонента или вложить навигационное меню в блок <bpt id="2">`</bpt>snippets<ept id="2">`</ept>.</source>
  <target xml:lang="uk">Наприклад, перемістити пункти меню, використовувати написаний код у іншому місці окремо від батьківського компонента або вкласти навігаційне меню в блок `snippets`.</target>
</trans-unit>
<trans-unit id="94">
  <source xml:lang="ru">Использование каскадов связывает независимые компоненты интерфейса: нет возможности исправить один компонент, не затронув стили другого.</source>
  <target xml:lang="uk">Використання каскадів пов'язує незалежні компоненти інтерфейсу: немає можливості виправити один компонент, не торкнувшись стилі іншого.</target>
</trans-unit>
<trans-unit id="95">
  <source xml:lang="ru"><bpt id="1">**</bpt>Решение<ept id="1">**</ept></source>
  <target xml:lang="uk">**Рішення**</target>
</trans-unit>
<trans-unit id="96">
  <source xml:lang="ru"><bpt id="l1">[</bpt>Правила по именованию CSS-селекторов<ept id="l1">]</ept><bpt id="l2">(</bpt>../naming-convention/naming-convention.ru.md<ept id="l2">)</ept> дают возможность вносить изменения точечно, не затрагивая зависимые компоненты.</source>
  <target xml:lang="uk">[Правила іменування CSS селекторів](../naming-convention/naming-convention.ru.md) дають можливість вносити зміни точково, не зачіпаючи залежні компоненти.</target>
</trans-unit>
<trans-unit id="97">
  <source xml:lang="ru">В БЭМ каждый блок имеет уникальное имя и является самодостаточным.</source>
  <target xml:lang="uk">У БЕМ кожен блок має унікальне ім'я і є самодостатнім.</target>
</trans-unit>
<trans-unit id="98">
  <source xml:lang="ru">Запишем тот же код в соответствии с правилами именования БЭМ:</source>
  <target xml:lang="uk">Запишемо той же код згідно з правилами іменування БЕМ:</target>
</trans-unit>
<trans-unit id="99">
  <source xml:lang="ru">&lt;ul class="nav"&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;One&lt;/a&gt;&lt;/li&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;Two&lt;/a&gt;&lt;/li&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;Three&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</source>
  <target xml:lang="uk">&lt;ul class="nav"&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;One&lt;/a&gt;&lt;/li&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;Two&lt;/a&gt;&lt;/li&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;Three&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</target>
</trans-unit>
<trans-unit id="100">
  <source xml:lang="ru">В таком случае добавление нового пункта <bpt id="2">`</bpt>item<ept id="2">`</ept> на страницу будет выглядеть так:</source>
  <target xml:lang="uk">У такому разі додавання нового пункту `item` на сторінку буде виглядати так:</target>
</trans-unit>
<trans-unit id="101">
  <source xml:lang="ru">&lt;div class="snippets"&gt;
    &lt;div class="snippets__item"&gt;
        &lt;h2 class="snippets__title"&gt;&lt;/h2&gt;
        &lt;img class="snippets__thumb"&gt;
    &lt;/div&gt;
&lt;/div&gt;</source>
  <target xml:lang="uk">&lt;div class="snippets"&gt;
    &lt;div class="snippets__item"&gt;
        &lt;h2 class="snippets__title"&gt;&lt;/h2&gt;
        &lt;img class="snippets__thumb"&gt;
    &lt;/div&gt;
&lt;/div&gt;</target>
</trans-unit>
<trans-unit id="102">
  <source xml:lang="ru">Пункт <bpt id="2">`</bpt>snippets__item<ept id="2">`</ept> будет иметь соответствующие только ему уникальные CSS-правила:</source>
  <target xml:lang="uk">Пункт `snippets__item` буде мати відповідні тільки йому унікальні CSS-правил:</target>
</trans-unit>
<trans-unit id="103">
  <source xml:lang="ru">Изменения в <bpt id="2">`</bpt>nav__item<ept id="2">`</ept> не влияют на <bpt id="4">`</bpt>snippets__item<ept id="4">`</ept>, так как пункты получают уникальные имена благодаря <bpt id="l6">[</bpt>пространству имен<ept id="l6">]</ept><bpt id="l7">(</bpt>https://ru.wikipedia.org/wiki/Пространство_имён_%28программирование%29<ept id="l7">)</ept>, заданному именем блока.</source>
  <target xml:lang="uk">Зміни в `nav__item` не впливають на `snippets__item`, так як пункти отримують унікальні імена завдяки [простору імен](https://ru.wikipedia.org/wiki/Пространство_имен_%28программирование%29), заданим ім'ям блоку.</target>
</trans-unit>
<trans-unit id="104">
  <source xml:lang="ru">Это позволяет формировать независимые CSS-правила для всех элементов блока.</source>
  <target xml:lang="uk">Це дозволяє формувати незалежні CSS-правила для всіх елементів блоку.</target>
</trans-unit>
<trans-unit id="105">
  <source xml:lang="ru">Такой подход дает возможность защитить элементы от взаимного влияния друг на друга — элементы всегда являются частью блока.</source>
  <target xml:lang="uk">Такий підхід дає можливість захистити елементи від взаємного впливу один на одного — елементи завжди є частиною блоку.</target>
</trans-unit>
<trans-unit id="106">
  <source xml:lang="ru">Такой же принцип работы использует и Shadow DOM в Web Components.</source>
  <target xml:lang="uk">Такий же принцип роботи використовує і Shadow DOM в Web Components.</target>
</trans-unit>
<trans-unit id="107">
  <source xml:lang="ru">Но, в отличие от Shadow DOM, применение соглашения по именованию БЭМ не зависит от совместимости с работой браузеров.</source>
  <target xml:lang="uk">Але, на відміну від Shadow DOM, застосування угоди щодо іменування БЕМ не залежить від сумісності з роботою браузерів.</target>
</trans-unit>
<trans-unit id="108">
  <source xml:lang="ru">Блоки <bpt id="2">`</bpt>snippets<ept id="2">`</ept> и <bpt id="4">`</bpt>nav<ept id="4">`</ept> можно повторно использовать и перемещать по странице или проекту.</source>
  <target xml:lang="uk">Блоки `snippets` і `nav` можна повторно використовувати і переміщати по сторінці або проектом.</target>
</trans-unit>
<trans-unit id="109">
  <source xml:lang="ru">Уникальность имен классов, основанная на правилах именования БЭМ, позволяет блокам не зависеть друг от друга.</source>
  <target xml:lang="uk">Унікальність імен класів, заснована на правилах іменування БЕМ, дозволяє блокам не залежати один від одного.</target>
</trans-unit>
<trans-unit id="110">
  <source xml:lang="ru">Использование каскадов в БЭМ</source>
  <target xml:lang="uk">Використання каскадів у БЕМ</target>
</trans-unit>
<trans-unit id="111">
  <source xml:lang="ru">Методология БЭМ допускает использование каскадов.</source>
  <target xml:lang="uk">Методологія БЕМ допускає використання каскадів.</target>
</trans-unit>
<trans-unit id="112">
  <source xml:lang="ru">Например, каскад уместен, чтобы менять элементы в зависимости от состояния блока или заданной ему темы:</source>
  <target xml:lang="uk">Наприклад, каскад доречний, щоб змінювати елементи в залежності від стану блоку або заданої йому теми:</target>
</trans-unit>
<trans-unit id="113">
  <source xml:lang="ru"><bpt id="1">**</bpt>Важно!<ept id="1">**</ept> Применение каскада увеличивает связанность кода и делает его повторное использование невозможным.</source>
  <target xml:lang="uk">**Важливо!** Застосування каскаду збільшує зв'язаність коду і робить його повторне використання неможливим.</target>
</trans-unit>
<trans-unit id="114">
  <source xml:lang="ru">Как разместить несколько сущностей на одном DOM-узле и избежать «Copy-Paste»</source>
  <target xml:lang="uk">Як розмістити кілька сутностей на одному DOM-вузлі і уникнути «Copy-Paste»</target>
</trans-unit>
<trans-unit id="115">
  <source xml:lang="ru"><bpt id="1">**</bpt>Проблема<ept id="1">**</ept></source>
  <target xml:lang="uk">**Проблема**</target>
</trans-unit>
<trans-unit id="116">
  <source xml:lang="ru">При работе с проектами может потребоваться повторно использовать реализованную функциональность.</source>
  <target xml:lang="uk">При роботі з проектами може знадобитися повторно використовувати реалізовану функціональність.</target>
</trans-unit>
<trans-unit id="117">
  <source xml:lang="ru">Во многих случаях такую проблему решают копированием нужной части кода в новый компонент.</source>
  <target xml:lang="uk">У багатьох випадках таку проблему вирішують копіюванням потрібної частини коду в новий компонент.</target>
</trans-unit>
<trans-unit id="118">
  <source xml:lang="ru">Такой подход имеет следующие недостатки:</source>
  <target xml:lang="uk">Такий підхід має наступні недоліки:</target>
</trans-unit>
<trans-unit id="119">
  <source xml:lang="ru">увеличивается кодовая база проекта;</source>
  <target xml:lang="uk">збільшується кодова база проекту;</target>
</trans-unit>
<trans-unit id="120">
  <source xml:lang="ru">затрудняется отладка кода при выявлении ошибки.</source>
  <target xml:lang="uk">може налагодження коду при виявленні помилки.</target>
</trans-unit>
<trans-unit id="121">
  <source xml:lang="ru">Как следствие, разработчик вынужден поддерживать большее количество строк кода, а исправления необходимо вносить отдельно в каждую реализацию.</source>
  <target xml:lang="uk">Як наслідок, розробник змушений підтримувати більшу кількість рядків коду, а виправлення треба вносити окремо в кожну реалізацію.</target>
</trans-unit>
<trans-unit id="122">
  <source xml:lang="ru">Это увеличивает временные затраты на отладку и поддержку проекта.</source>
  <target xml:lang="uk">Це збільшує часові витрати на налагодження і підтримку проекту.</target>
</trans-unit>
<trans-unit id="123">
  <source xml:lang="ru"><bpt id="1">**</bpt>Решение<ept id="1">**</ept></source>
  <target xml:lang="uk">**Рішення**</target>
</trans-unit>
<trans-unit id="124">
  <source xml:lang="ru">Воспользуемся примером, который реализует универсальный блок навигационного меню и написан по всем <bpt id="l2">[</bpt>правилам именования БЭМ<ept id="l2">]</ept><bpt id="l3">(</bpt>../naming-convention/naming-convention.ru.md<ept id="l3">)</ept>.</source>
  <target xml:lang="uk">Скористаємося прикладом, який реалізує універсальний блок навігаційного меню та написаний за всіма [правилами іменування БЕМ](../naming-convention/naming-convention.ru.md).</target>
</trans-unit>
<trans-unit id="125">
  <source xml:lang="ru">&lt;ul class="nav"&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;One&lt;/a&gt;&lt;/li&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;Two&lt;/a&gt;&lt;/li&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;Three&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</source>
  <target xml:lang="uk">&lt;ul class="nav"&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;One&lt;/a&gt;&lt;/li&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;Two&lt;/a&gt;&lt;/li&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;Three&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</target>
</trans-unit>
<trans-unit id="126">
  <source xml:lang="ru">Такой блок можно использовать, например, для навигации по статьям в блоке новостей.</source>
  <target xml:lang="uk">Такий блок можна використовувати, наприклад, для навігації по статтям в блоці новин.</target>
</trans-unit>
<trans-unit id="127">
  <source xml:lang="ru">Допустим, в разделе новостей уже есть блок <bpt id="2">`</bpt>articles<ept id="2">`</ept>, которому написаны все необходимые CSS-правила.</source>
  <target xml:lang="uk">Припустимо, в розділі новин вже є блок `articles`, якому написані всі необхідні CSS-правила.</target>
</trans-unit>
<trans-unit id="128">
  <source xml:lang="ru">Смешать реализации двух разных блоков без копирования кода можно при помощи <bpt id="l2">[</bpt>микса<ept id="l2">]</ept><bpt id="l3">(</bpt>../key-concepts/key-concepts.ru.md#Микс<ept id="l3">)</ept>.</source>
  <target xml:lang="uk">Змішати реалізації двох різних блоків без копіювання коду можна за допомогою [міксу](../key-concepts/key-concepts.ru.md#Мікс).</target>
</trans-unit>
<trans-unit id="129">
  <source xml:lang="ru">То есть разместить на одном DOM-узле блок <bpt id="2">`</bpt>nav<ept id="2">`</ept> и элемент <bpt id="4">`</bpt>articles__nav<ept id="4">`</ept>.</source>
  <target xml:lang="uk">Тобто розмістити на одному DOM-сайті блок `nav` елемент `articles__nav`.</target>
</trans-unit>
<trans-unit id="130">
  <source xml:lang="ru">В коде это будет выглядеть так:</source>
  <target xml:lang="uk">У коді це буде виглядати так:</target>
</trans-unit>
<trans-unit id="131">
  <source xml:lang="ru">&lt;ul class="nav articles__nav"&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;One&lt;/a&gt;&lt;/li&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;Two&lt;/a&gt;&lt;/li&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;Three&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</source>
  <target xml:lang="uk">&lt;ul class="nav articles__nav"&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;One&lt;/a&gt;&lt;/li&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;Two&lt;/a&gt;&lt;/li&gt;
    &lt;li class="nav__item"&gt;&lt;a class="nav__link"&gt;Three&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</target>
</trans-unit>
<trans-unit id="132">
  <source xml:lang="ru">Такая реализация позволит объединить функциональность блока <bpt id="2">`</bpt>nav<ept id="2">`</ept> и особенности реализации элемента <bpt id="4">`</bpt>articles__nav<ept id="4">`</ept> (внешний вид новостных статей в меню).</source>
  <target xml:lang="uk">Така реалізація дозволить об'єднати функціональність блоку `nav` і особливості реалізації елемента `articles__nav` (зовнішній вигляд новинних статей в меню).</target>
</trans-unit>
<trans-unit id="133">
  <source xml:lang="ru">При этом нет необходимости копировать уже имеющиеся CSS-правила.</source>
  <target xml:lang="uk">При цьому немає необхідності копіювати вже наявні CSS-правила.</target>
</trans-unit>
<trans-unit id="134">
  <source xml:lang="ru">При обнаружении ошибки, правки необходимо будет внести только в одну часть кода.</source>
  <target xml:lang="uk">При виявленні помилки, виправлення необхідно буде внести тільки одну частину коду.</target>
</trans-unit>
<trans-unit id="135">
  <source xml:lang="ru">Миксовать можно не только блоки с элементами, но и другие БЭМ-сущности.</source>
  <target xml:lang="uk">Міксувати можна не тільки блоки з елементами, але і інші БЕМ-сутності.</target>
</trans-unit>
<trans-unit id="136">
  <source xml:lang="ru">Подробнее о вариантах использования миксов в БЭМ читайте в разделе <bpt id="l2">[</bpt>Основные понятия БЭМ<ept id="l2">]</ept><bpt id="l3">(</bpt>../key-concepts/key-concepts.ru.md#Микс<ept id="l3">)</ept>.</source>
  <target xml:lang="uk">Детальніше про варіанти використання міксів в БЕМ читайте у розділі [Основні поняття БЕМ](../key-concepts/key-concepts.ru.md#Мікс).</target>
</trans-unit>
    </body>
 </file>
</xliff>
